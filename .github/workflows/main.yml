name: Release

on: push

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.4
      - name: helm-lint
        run: helm lint charts/rancher-demo
      - uses: actions/setup-go@v1
        with:
          go-version: '1.16'
      - name: go-test
        run: make test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: bashofmann/rancher-demo:${{ env.RELEASE_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: bashofmann/rancher-demo:${{ env.RELEASE_VERSION }}
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.FLEET_REPO_PRIVATE_KEY }}"

      - name: Bump release
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          git clone git@github.com:bashofmann/rancher-k3s-fleet-examples.git
          cd rancher-k3s-fleet-examples
          sed -i 's/ref=.*/ref=${{ env.RELEASE_VERSION }}/g' cicd/rancher-demo/fleet.yaml
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "bump rancher-demo to ${{ env.RELEASE_VERSION }}"
          git push
